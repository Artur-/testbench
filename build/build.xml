<?xml version="1.0"?>

<project name="TestBench build" basedir="." default="testbench-distribution-package">

	<!-- Build type specific configuration -->
    <echo>Using build type specfic property file: "${build.properties.file}"</echo>
	<!-- Load version from properties file. If not found, version is specified below. -->
    <property file="${build.properties.file}" />
	
	<property name="version.base" value="3.0.0-SNAPSHOT" />
	<property name="manual.version" value="3.0"/>
	        	
	<tstamp />
	<property name="testbench.version" value="${version.base}" />
	
    <!-- If not already set by the build system -->
    <property name="version" value="${testbench.version}" />

	<property name="output.dir" value="result/package" />

	<echo>Version: ${version}</echo>
		
	<target name="make-output-dirs">
		<delete dir="result" failonerror="true" />

		<mkdir dir="${output.dir}" />
		<mkdir dir="result/classes" />
	</target>
		
	<target name="testbench-standalone.jar" depends="make-output-dirs">
		<javac srcdir="../src" destdir="result/classes" debug="true" encoding="utf-8" target="1.5" source="1.5">
			<classpath>
				<fileset dir="../lib" id="libs">
					<include name="**/*.jar" />
				</fileset>
			</classpath>
		</javac>
		<jar jarfile="${output.dir}/vaadin-testbench-standalone-${version}.jar" compress="true">
			<manifest>
				<attribute name="Main-Class" value="org.openqa.grid.selenium.GridLauncher" />
			</manifest>
			<zipfileset dir="../src">
				<include name="**/**.js" />
			</zipfileset>
			<zipfileset dir="result/classes">
				<include name="**/**" />
				<exclude name="**/test/**" />
			</zipfileset>
			<zipfileset src="../lib/selenium-standalone.jar" />
		</jar>
	</target>
	
	<target name="testbench.jar" depends="make-output-dirs">
        <javac srcdir="../src" destdir="result/classes" debug="true" encoding="utf-8" target="1.5" source="1.5">
            <classpath>
                <fileset dir="../lib" id="libs">
                    <include name="**/*.jar" />
                </fileset>
            </classpath>
        </javac>
        <jar jarfile="${output.dir}/vaadin-testbench-${version}.jar" compress="true">
            <manifest>
                <attribute name="Main-Class" value="org.openqa.grid.selenium.GridLauncher" />
            </manifest>
            <zipfileset dir="../src">
                <include name="**/**.js" />
            </zipfileset>
            <zipfileset dir="result/classes">
                <include name="**/**" />
                <exclude name="**/test/**" />
            </zipfileset>
        </jar>
    </target>

    <!-- ================================================================== -->
    <!-- Documentation                                                      -->
    <!-- ================================================================== -->

	<target name="javadoc">
		  <javadoc
		           destdir="result/api"
		           author="true"
		           version="true"
		           use="true"
		           windowtitle="TestBench API">

		    <packageset dir="../src" defaultexcludes="yes">
		      <include name="com/vaadin/**"/>
		    </packageset>

		    <doctitle><![CDATA[<h1>TestBench API</h1>]]></doctitle>
		    <bottom><![CDATA[<i>Copyright &#169; 2012 Vaadin Ltd. All Rights Reserved.</i>]]></bottom>
		  </javadoc>
	</target>

	<target name="javadoc.jar" depends="javadoc">
        <jar jarfile="${output.dir}/vaadin-testbench-${version}-javadoc.jar" compress="true">
            <zipfileset dir="result/api">
                <include name="**/**" />
            </zipfileset>
        </jar>
		<copy file="${output.dir}/vaadin-testbench-${version}-javadoc.jar" tofile="${output.dir}/vaadin-testbench-standalone-${version}-javadoc.jar" />
	</target>
	
    <!-- ================================================================== -->
    <!--                                                                    -->
    <!-- ================================================================== -->

	<target name="testbench-recorder">
		<!-- Create the TestBench IDE FireFox plugin -->
		<subant target="extension">
			<property name="version" value="${version}"/>
			<fileset dir="../testbench-recorder" includes="build.xml" />
		</subant>
		<copy file="../testbench-recorder/extension/vaadin-testbench-recorder-${version}.xpi" todir="${output.dir}/vaadin-testbench-recorder" />
	</target>

	<target name="testbench-distribution-package" depends="testbench-standalone.jar,testbench.jar,javadoc.jar,testbench-recorder,run-tests">
		<property name="package.root" value=""/>
        <copy todir="${output.dir}">
            <filterchain>
                <expandproperties />
                <replacetokens begintoken="@" endtoken="@">
                    <token key="version" value="${version}" />
                </replacetokens>
            </filterchain>
            <fileset dir=".">
                <include name="MANIFEST.MF" />
            </fileset>
        </copy>
        <copy todir="result">
            <filterchain>
                <expandproperties />
                <replacetokens begintoken="@" endtoken="@">
                    <token key="version" value="${version}" />
                </replacetokens>
            </filterchain>
            <fileset dir="../doc">
                <include name="releasenotes.html" />
            </fileset>
        </copy>

		<zip destfile="${output.dir}/vaadin-testbench-${version}.zip">
			<zipfileset dir="${output.dir}" includes="MANIFEST.MF" prefix="META-INF"/>
			<zipfileset dir="${output.dir}" includes="vaadin-testbench-standalone-${version}.jar,vaadin-testbench-standalone-${version}-javadoc.jar" prefix="${package.root}"/>
			<zipfileset dir="${output.dir}" includes="vaadin-testbench-recorder/vaadin-testbench-recorder-${version}.xpi" prefix="${package.root}" />
			<zipfileset dir="${output.dir}" includes="vaadin-testbench-${version}.jar,vaadin-testbench-${version}-javadoc.jar" prefix="${package.root}/maven" />
			<zipfileset dir="." includes="pom.xml" prefix="${package.root}/maven" />
			<zipfileset dir="../doc/maven" includes="INSTALL" prefix="${package.root}/maven" />
			<zipfileset dir=".." includes="example/**/**" excludes="**/*.class,**/target/**" prefix="${package.root}" />

			<!-- Add documentation -->
			<zipfileset dir="../doc" prefix="${package.root}/documentation">
				<include name="*.pdf" />
				<include name="license*.txt" />
				<include name="licensing.txt" />
			</zipfileset>
			<zipfileset dir="result" prefix="${package.root}/documentation">
				<include name="releasenotes.html" />
				<include name="${manual.pdf.filename}" />
				<include name="api/**" />
			</zipfileset>
		</zip>
	</target>

    <target name="run-tests">
        <property name="class.path" value="${java.class.path}"/>
        <subant target="all-tests" buildpath="../test" failonerror="false">
            <property name="class.path" value="${class.path}"/>
        </subant>
    </target>
</project>
