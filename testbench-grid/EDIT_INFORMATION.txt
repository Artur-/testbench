Differences between TestBench and Selenium Grid 1.0.4

The differences between TestBench and Selenium version of the grid are in the handling of remote-controls.

TestBench Grid group the remote controls by their hash value (consists of ip+port) where the original Selenium implementation groups them by their environment.

TestBench also restricts the remote controls so that they may only run one test at a time.

TestBench enables remote controls to register multiple environments when they are started where as the original implementation only allows one environment/remote control.

TestBench also adds some load balancing by checking which remote control has the least waiting reservations and by allowing tests to search for another remote controller in the case they fail to reserve the remote controller they are waiting for after a number of tries (another test is faster and gets the remote control).


Changed files.

infrastructure:
	com.thoughtworks.selenium.grid.HttpClient									[socket timeout, getResponseBodyAsStream instead of getResponseBody]
hub:
	com.thoughtworks.selenium.grid.hub.management.RegistrationServlet			[multiple environments]
	com.thoughtworks.selenium.grid.hub.management.RemoteControlParser			[Support environment string parsing]
	com.thoughtworks.selenium.grid.hub.management.UnregistrationServlet			[multiple environments]

	com.thoughtworks.selenium.grid.hub.management.console.index.html			[names]

	com.thoughtworks.selenium.grid.hub.remotecontrol.DynamicRemoteControlPool	[]
	com.thoughtworks.selenium.grid.hub.remotecontrol.GlobalRemoteControlPool	[multiple environments, grouping, load balancing]
	com.thoughtworks.selenium.grid.hub.remotecontrol.RemoteControlProvsioner	[group handling, load balancing]
	com.thoughtworks.selenium.grid.hub.remotecontrol.RemoteControlProxy			[equals(Object), toString()]

	
Changed files for RemoteControl reregistration #3685
rc:
	com.thoughtworks.selenium.grid.remotecontrol.SelfRegisteringRemoteControl	[Timer]
hub:
	com.thoughtworks.selenium.grid.hub.management.RegistrationConfirmationServlet [new file for confirming that RC is registered]
	com.thoughtworks.selenium.grid.hub.remotecontrol.DynamicRemoteControlPool	[]
	com.thoughtworks.selenium.grid.hub.remotecontrol.GlobalRemoteControlPool	[status and checkRegistartion methods]
	com.thoughtworks.selenium.grid.hub.remotecontrol.RemoteControlProvsioner	[confirm method]
	
Changed files for timeout watchdog #3610

infrastructure:
	com.thoughtworks.selenium.grid.HttpClient [inUse flag]
hub:
	com.thoughtworks.selenium.grid.hub.remotecontrol.RemoteControlProxy			[WatchDog timer]
	com.thoughtworks.selenium.grid.hub.remotecontrol.GlobalRemoteControlPool	[Givee session to RC]
	
Updated to selenium-server-1.0.3.jar

